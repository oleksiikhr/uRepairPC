version: '3'

services:
  traefik:
    image: traefik:v2.2
    container_name: u_traefik
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --log.level=DEBUG
      - --metrics.prometheus=true
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080

  php-fpm:
    build: ./.docker/php-fpm
    container_name: u_php_fpm
    restart: always
    volumes:
      - ./:${CONTAINER_PATH}

  php-worker:
    build: .docker/php-worker
    container_name: u_php_worker
    restart: always
    volumes:
      - ./:${CONTAINER_PATH}
      - ./.docker/php-worker/supervisord.d:/etc/supervisord.d

  nginx:
    build: ./.docker/nginx
    container_name: u_nginx
    restart: always
    volumes:
      - ./:${CONTAINER_PATH}
      - ./storage/app/public:${CONTAINER_PATH}/public/storage/
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/sites/:/etc/nginx/sites-available
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - php-fpm
    labels:
      - traefik.http.routers.nginx.rule=Host(`urepairpc.localhost`) && PathPrefix(`/api/`, `/storage/`, `/robots.txt`)
      - traefik.http.routers.nginx.entrypoints=web

  web:
    build: ./.docker/web
    container_name: u_web
    restart: always
    volumes:
      - ./web:/usr/app
    labels:
      - traefik.http.routers.web.rule=Host(`urepairpc.localhost`)
      - traefik.http.routers.web.entrypoints=web

  websocket:
    build: ./.docker/websocket
    container_name: u_websocket
    restart: always
    volumes:
      - ./websocket:/usr/app
    depends_on:
      - rabbitmq
    labels:
      - traefik.http.routers.websocket.rule=Host(`urepairpc.localhost`) && Path(`/ws/server/`)
      - traefik.http.routers.websocket.entrypoints=web

  mysql:
    build: ./.docker/mysql
    container_name: u_mysql
    restart: always
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
    ports:
      - ${DB_PORT}:3306

  redis:
    build: ./.docker/redis
    container_name: u_redis
    restart: always
    volumes:
      - ${DATA_PATH}/redis:/data
    ports:
      - 6379:6379

  rabbitmq:
    build: ./.docker/rabbitmq
    container_name: u_rabbitmq
    restart: always
    volumes:
      - ${DATA_PATH}/rabbitmq:/var/lib/rabbitmq
    labels:
      - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.localhost`)
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672
    ports:
      - 5672:5672

  prometheus:
    image: prom/prometheus
    container_name: u_prometheus
    restart: always
    user: "0"
    labels:
      - traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)

  grafana:
    image: grafana/grafana:7.0.4
    container_name: u_grafana
    restart: always
    depends_on:
      - prometheus
    user: "0"
    labels:
      - traefik.http.routers.grafana.rule=Host(`grafana.localhost`)
    volumes:
      - ${DATA_PATH}/grafana:/var/lib/grafana

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0-fpm-alpine
    container_name: u_phpmyadmin
    restart: always
    environment:
      - PMA_HOST=mysql
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    labels:
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)

  netdata:
    image: netdata/netdata:v1.23.0
    container_name: u_netdata
    restart: always
    cap_add:
      - SYS_PTRACE
    labels:
      - traefik.http.routers.netdata.rule=Host(`netdata.localhost`)

  maildev:
    image: djfarrelly/maildev
    container_name: u_maildev
    restart: always
    ports:
      - 25:25
    labels:
      - traefik.http.routers.maildev.rule=Host(`maildev.localhost`)
      - traefik.http.services.maildev.loadbalancer.server.port=80
